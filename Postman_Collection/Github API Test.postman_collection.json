{
	"info": {
		"_postman_id": "83e1e907-1978-41f3-994b-590ceca8392b",
		"name": "Github API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9632933"
	},
	"item": [
		{
			"name": "Search repositories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains items\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.items).to.be.an(\"array\");\r",
							"    pm.expect(jsonData.items.length).to.be.above(0);\r",
							"});\r",
							"\r",
							"pm.test(\"First repository has required fields\", function () {\r",
							"    var firstRepo = pm.response.json().items[0];\r",
							"    pm.expect(firstRepo).to.have.property(\"name\");\r",
							"    pm.expect(firstRepo).to.have.property(\"html_url\");\r",
							"    pm.expect(firstRepo).to.have.property(\"stargazers_count\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/search/repositories?q={machine learning}&sort=stars&order=desc",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"search",
						"repositories"
					],
					"query": [
						{
							"key": "q",
							"value": "{machine learning}"
						},
						{
							"key": "sort",
							"value": "stars"
						},
						{
							"key": "order",
							"value": "desc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Commits",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array of commits\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"array\");\r",
							"    pm.expect(jsonData.length).to.be.above(0);\r",
							"});\r",
							"\r",
							"pm.test(\"First commit has required fields\", function () {\r",
							"    var firstCommit = pm.response.json()[0];\r",
							"    pm.expect(firstCommit).to.have.property(\"sha\");\r",
							"    pm.expect(firstCommit.commit).to.have.property(\"author\");\r",
							"    pm.expect(firstCommit.commit.author).to.have.property(\"name\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/tensorflow/tensorflow/commits?since=2024-11-01",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"tensorflow",
						"tensorflow",
						"commits"
					],
					"query": [
						{
							"key": "since",
							"value": "2024-11-01"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Contents",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains file information\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    \r",
							"    pm.expect(jsonData).to.be.an('array').that.is.not.empty;\r",
							"\r",
							"    var files = jsonData.filter(function(item) {\r",
							"        return item.type === \"file\";\r",
							"    });\r",
							"\r",
							"    pm.expect(files).to.have.length.greaterThan(0);\r",
							"\r",
							"    files.forEach(function(item) {\r",
							"        pm.expect(item).to.have.property(\"name\");\r",
							"        pm.expect(item).to.have.property(\"download_url\");\r",
							"        pm.expect(item).to.have.property(\"type\");\r",
							"        pm.expect(item.type).to.equal(\"file\");\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/tensorflow/tensorflow/contents?path=blob/master/requirements_lock_3_10.txt",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"tensorflow",
						"tensorflow",
						"contents"
					],
					"query": [
						{
							"key": "path",
							"value": "blob/master/requirements_lock_3_10.txt"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"At least one repository in the 'items' array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.items.length).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/search/repositories?q=python&page=2&per_page=1",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"search",
						"repositories"
					],
					"query": [
						{
							"key": "q",
							"value": "python"
						},
						{
							"key": "page",
							"value": "2"
						},
						{
							"key": "per_page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Rate limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/rate_limit",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"rate_limit"
					]
				}
			},
			"response": []
		}
	]
}